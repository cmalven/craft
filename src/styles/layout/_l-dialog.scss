/*
Layout - Dialog

Wrapper for dialog content
*/

@mixin dialog-common {
  .l-dialog__content {
    transition-property: opacity, transform;
    width: 100vw;
    flex: 1 1 auto;

    .js & {
      transition: var(--transition-duration) ease(out-expo);
    }
  }

  .l-dialog__content-inner {
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;

    > * {
      flex: 1 1 auto;
    }
  }

  &.is-open {
    .l-dialog__content {
      transform: translateX(0) !important;
    }
  }
}

.l-dialog {
  --transition-duration: 0.4s;

  .js & {
    @include fixed;
    pointer-events: none;
    overflow: clip;
    z-index: $z-index-dialog;
    overflow-y: scroll;
    -webkit-overflow-scrolling: touch;
    min-height: env(safe-area-inset-bottom);
    opacity: 0;
    display: none;
    transition-duration: var(--transition-duration);
    transition-timing-function: ease(out-expo);
    transition-property: opacity, transform, display;
    transition-behavior: allow-discrete;

    &:not([aria-hidden='true']) {
      opacity: 1;
      display: flex;
    }
  }
}

@starting-style {
  .l-dialog {
    .js & {
      opacity: 0;
    }
  }
}

.l-dialog__inner {
  width: 100%;
  display: flex;
  flex-direction: column;
}

.l-dialog__close-overlay {
  transition: opacity var(--transition-duration) ease(out-expo);
  background-color: black;
  opacity: 0;

  .js & {
    @include fixed;
  }
}

.l-dialog__content {
  display: flex;
  flex-direction: column;

  .js & {
    // Apply transforms or opacity to content
  }
}

.l-dialog__content-close {
  @include size(outer, top right);
  position: absolute;
  pointer-events: auto;
  transition: 0.8s ease(out-expo);
  transition-property: transform, opacity;
  transition-delay: 0s;

  > button {
    --size: 4.4rem;

    @include reset-input;
    cursor: pointer;
    transition: opacity $transition-hover-color;
    width: var(--size);
    height: var(--size);
    display: flex;
    justify-content: center;
    align-items: center;

    &:hover {
      opacity: 0.5;
    }
  }

  svg {
    width: var(--size);
    height: var(--size);
  }

  .js & {
    opacity: 0;
    transform: translateX(1rem);
  }
}

.l-dialog__content-inner {
  position: relative;
  pointer-events: auto;
  min-height: min-content;
}

// ---------------------------------------------------------------
// State - Opening
// ---------------------------------------------------------------

.l-dialog:not([aria-hidden='true']) {
  display: flex;
}

// ---------------------------------------------------------------
// State - Open
// ---------------------------------------------------------------

.l-dialog.is-open {
  pointer-events: auto;

  .l-dialog__close-overlay {
    opacity: 0.1;
  }

  .l-dialog__content {
    // Reveal content
  }

  .l-dialog__content-close {
    opacity: 1;
    transform: translateX(0);
    transition-delay: 0.3s;
    z-index: $z-index-dialog;
  }
}

// ---------------------------------------------------------------
// Modifier - Global Nav
// ---------------------------------------------------------------

.l-dialog--global-nav {
  @include dialog-common;

  .l-dialog__content {
    margin-right: auto;

    .js & {
      opacity: 0;
      transition-delay: 0.6s;
    }
  }

  .l-dialog__content-close {
    .js & {
      transform: translateX(-1rem);
    }
  }

  &.is-open {
    .l-dialog__content {
      opacity: 1;
      transition-delay: 0s;
    }

    .l-dialog__content-close {
      transform: translateX(0);
    }
  }
}
